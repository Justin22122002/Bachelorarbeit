import os
from typing import Union

import requests


class MalwareBazaarAPI:
    def __init__(self, api_url: str = "https://mb-api.abuse.ch/api/v1/"):
        self.api_url: str = api_url

    def query(self, payload: dict[str, str | int]) -> dict[str, list[dict[str, str]]] | str:
        try:
            response: requests.Response = requests.post(self.api_url, data=payload)

            if response.status_code == 200:
                return response.json()
            else:
                return f"Error: Received status code {response.status_code}"

        except Exception as e:
            return f"An error occurred: {e}"

    def download_file(self, base_location: str, sha256_hash: str, file_name: str, folder_name: str) -> None:
        """
        Download a file using the given SHA256 hash and save it to the specified folder.

        Args:
        - sha256_hash (str): The SHA256 hash of the file to be downloaded.
        - file_name (str): The name to give the file.
        - folder_name (str): The folder name where the file will be saved.
        """
        payload: dict[str, str] = {
            "query": "get_file",
            "sha256_hash": sha256_hash
        }

        target_directory: str = os.path.join(base_location, folder_name)

        try:
            os.makedirs(target_directory, exist_ok=True)

            response: requests.Response = requests.post(self.api_url, data=payload)

            if response.status_code == 200:
                zip_file_path: str = os.path.join(target_directory, f"{sha256_hash}.zip")

                with open(zip_file_path, 'wb') as zip_file:
                    zip_file.write(response.content)
                print(f"File downloaded and saved to {zip_file_path}")
            else:
                print(f"Error: Received status code {response.status_code} - {response.text}")

        except Exception as e:
            print(f"An error occurred: {e}")