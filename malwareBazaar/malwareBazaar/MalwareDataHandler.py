from typing import Union

from malwareBazaar.MalwareBazaarAPI import MalwareBazaarAPI
from malwareBazaar.writer.CSVWriter import CSVWriter


class MalwareDataHandler:
    def __init__(
            self, api: MalwareBazaarAPI,
            writer: CSVWriter
    ):
        self.api: MalwareBazaarAPI = api
        self.writer: CSVWriter = writer

    def query_and_save(self, payload: dict[str, str | int], file_name: str, limit: int) -> None:
        result: Union[dict[str, list[dict[str, str]]], str] = self.api.query(payload)

        if isinstance(result, dict) and "data" in result:
            self.writer.save(result["data"], file_name, limit=limit)

    def query_tag(self, search_term: str, limit: int = 200, save_limit: int = 100) -> None:
        payload: dict[str, Union[str, int]] = {
            "query": "get_taginfo",
            "tag": search_term,
            "limit": limit
        }
        self.query_and_save(payload, f"{search_term}.csv", save_limit)

    def query_signature(self, search_term: str, limit: int = 200, save_limit: int = 100) -> None:
        payload: dict[str, Union[str, int]] = {
            "query": "get_siginfo",
            "signature": search_term,
            "limit": limit
        }
        self.query_and_save(payload, f"{search_term}.csv", save_limit)