from abc import ABC, abstractmethod
from typing import TypeVar, Generic

from malwareAnalysis.malwareAnalysisTool.analysis.models.data.PsData import PsData

T = TypeVar('T', bound=PsData)

class AbstractRules(ABC, Generic[T]):
    """
    Abstract base class for defining rule-based analysis.
    """

    def __init__(self, analyzer_output: list[T]):
        """
        Initializes the rule-based analysis with analyzer output.
        """
        self.analyzer_output: list[T] = analyzer_output
        self.unusual_processes: list[T] = []

    @abstractmethod
    def find_unusual_processes(self) -> None:
        """
        Abstract method for identifying unusual processes.
        """
        pass