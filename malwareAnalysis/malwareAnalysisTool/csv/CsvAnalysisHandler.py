import csv

from malwareAnalysis.malwareAnalysisTool.analysis.models.result.Summary import Summary


class CsvAnalysisHandler:
    """Handles writing and appending data to a CSV file."""

    def __init__(self, output_csv: str, raw_type: str):
        self.output_csv: str = output_csv
        self.raw_type: str = raw_type

    def write_header(self, summaries: list[Summary]) -> None:
        """
        Writes the CSV header to the file, including the Raw_Type column.
        :param summaries: List of summary objects to extract headers from.
        """
        with open(self.output_csv, mode='w', newline='') as file:
            writer = csv.writer(file)

            # Start the header with the Raw_Type column
            header: list[str] = ["Raw_Type"]
            for summary in summaries:
                header.extend(summary.create_csv_header())

            writer.writerow(header)

    def append_data(self, summaries: list[Summary]) -> None:
        """Appends summary data to the CSV file."""
        with open(self.output_csv, mode='a', newline='') as file:
            writer = csv.writer(file)

            data: list[int | float] = [self.raw_type]
            for summary in summaries:
                data.extend(summary.create_csv_summary())

            writer.writerow(data)

        print(f"Data has been appended to {self.output_csv}")

