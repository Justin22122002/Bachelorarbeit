import json
from typing_extensions import override

from malwareAnalysis.malwareAnalysisTool.analysis.AnalysisStrategy import AnalysisStrategy
from malwareAnalysis.malwareAnalysisTool.analysis.models.OperatingSystem import OperatingSystem
from malwareAnalysis.malwareAnalysisTool.analysis.models.data.ImageInfoData import ImageInfoData


class ImageInfoStrategy(AnalysisStrategy[ImageInfoData, None]):
    """
    A strategy for analyzing image information in system memory.

    This strategy operates on `ImageInfoData` and does not produce a summary.
    """

    @override
    def get_command(self) -> dict[OperatingSystem, str]:
        """
        Returns the Volatility command required for extracting image information.
        """
        return {OperatingSystem.WINDOWS: 'windows.info'}

    @override
    def analyze_output(self, file_path: str | None = None) -> None:
        """
        Parses the output JSON file and extracts image-related data.
        """
        path_to_use: str = file_path if file_path else self.get_file_path()

        with open(path_to_use, 'r') as file:
            data: list[dict] = json.load(file)

        image_info_data: list[ImageInfoData] = self.parse_image_info_data(data)
        print(image_info_data)

    @staticmethod
    def parse_image_info_data(data: list[dict]) -> list[ImageInfoData]:
        """
        Parses the JSON output to create a list of ImageInfoData instances.
        """
        def parse(data_item: dict) -> ImageInfoData:
            children: list[ImageInfoData] = [parse(child) for child in data_item.get('__children', [])]
            return ImageInfoData(
                Value=str(data_item.get('Value', '')),
                Variable=str(data_item.get('Variable', '')),
                children=children
            )

        return [parse(item) for item in data]