from dataclasses import dataclass
from typing_extensions import override

from malwareAnalysis.malwareAnalysisTool.analysis.models.result.Summary import Summary


@dataclass
class MalfindSummary(Summary):
    """
    A data class to store summarized malfind metrics.

    Attributes:
        ninjections (int): Total number of hidden code injections.
        total_commit_charge (int): Total number of Commit Charges.
        protections (int): The number of protection.
        unique_injections (int): The number of unique injections.

    """

    ninjections: int
    total_commit_charge: int
    protections: int
    unique_injections: int

    @override
    def create_csv_summary(self) -> list[int | float]:
        """
        Generate a CSV summary row with the values.
        """
        return [
            self.ninjections,
            self.total_commit_charge,
            self.protections,
            self.unique_injections
        ]

    @override
    def create_csv_header(self) -> list[str]:
        """
        Generate a CSV header for the summary.
        """
        return [
            "malfind_ninjections",
            "malfind_commitCharge",
            "malfind_protection",
            "malfind_uniqueInjections"
        ]

    def __str__(self) -> str:
        """
        Generate a formatted string representation of the summary.
        """
        return (f"Malfind Summary:\n"
                f"  Total Processes (ninjections): {self.ninjections}\n"
                f"  Total Commit Charge (total_commit_charge): {self.total_commit_charge}\n"
                f"  Unique Protection Types (unique_protections): {self.protections}\n"
                f"  Unique Code Injections (unique_injections): {self.unique_injections}\n")
