from dataclasses import dataclass
from typing import override

from malwareAnalysis.malwareAnalysisTool.analysis.models.result.Summary import Summary


@dataclass
class DllListSummary(Summary):
    """
    A data class to store summarized DLL list metrics.

    Attributes:
        ndlls (int): Total number of loaded libraries for every process.
        avg_dlls_per_proc (float): Average number of loaded libraries per process.
        avg_handles (float): The average number of handles associated with DLLs. --> Not used
    """
    ndlls: int
    avg_dlls_per_proc: float
    avg_handles: float

    @override
    def create_csv_summary(self) -> list[int | float]:
        """
        Generate a CSV summary row with the values.
        """
        return [
            self.ndlls,
            self.avg_dlls_per_proc
        ]

    @override
    def create_csv_header(self) -> list[str]:
        """
        Generate a CSV header for the summary.
        """
        return [
            "dlllist_ndlls",
            "dlllist_avg_dlls_per_proc"
        ]

    def __str__(self) -> str:
        """
        Generate a formatted string representation of the summary.
        """
        return (f"DLL List Summary:\n"
                f"  Total Loaded DLLs (ndlls): {self.ndlls}\n"
                f"  Average DLLs per Process (avg_dlls_per_proc): {self.avg_dlls_per_proc:.9f}\n"
                f"  Average Handles per DLL (avg_handles): {self.avg_handles:.9f}\n")