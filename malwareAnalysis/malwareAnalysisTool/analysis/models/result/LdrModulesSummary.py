from dataclasses import dataclass
from typing import override
from malwareAnalysis.malwareAnalysisTool.analysis.models.result.Summary import Summary


@dataclass
class LdrModulesSummary(Summary):
    """
    Represents the summary statistics for loaded modules analysis.

    Attributes:
        nmodules (int): Total number of modules.
        avg_modules_per_proc (float): Average number of modules per process.
        ldrmodules_not_in_load (int): Total number of modules missing from the load list.
        ldrmodules_not_in_init (int): Total number of modules missing from the init list.
        ldrmodules_not_in_mem (int): Total number of modules missing from the memory list.
        ldrmodules_not_in_load_avg (float): Average amount of modules missing from load list.
        ldrmodules_not_in_init_avg (float): Average amount of modules missing from init list.
        ldrmodules_not_in_mem_avg (float): Average amount of modules missing from memory list.
    """

    nmodules: int
    avg_modules_per_proc: float
    ldrmodules_not_in_load: int
    ldrmodules_not_in_init: int
    ldrmodules_not_in_mem: int
    ldrmodules_not_in_load_avg: float
    ldrmodules_not_in_init_avg: float
    ldrmodules_not_in_mem_avg: float

    @override
    def create_csv_summary(self) -> list[int | float]:
        """
        Generate a CSV summary row with the values.
        """
        return [
            self.ldrmodules_not_in_load,
            self.ldrmodules_not_in_init,
            self.ldrmodules_not_in_mem,
            self.ldrmodules_not_in_load_avg,
            self.ldrmodules_not_in_init_avg,
            self.ldrmodules_not_in_mem_avg
        ]

    @override
    def create_csv_header(self) -> list[str]:
        """
        Generate a CSV header for the summary.
        """
        return [
            "ldrmodules_not_in_load",
            "ldrmodules_not_in_init",
            "ldrmodules_not_in_mem",
            "ldrmodules_not_in_load_avg",
            "ldrmodules_not_in_init_avg",
            "ldrmodules_not_in_mem_avg"
        ]

    def __str__(self) -> str:
        """
        Generate a formatted string representation of the summary.
        """
        return (f"LdrModules Summary:\n"
                f"  Total Modules (nmodules): {self.nmodules}\n"
                f"  Average Modules per Process (avg_modules_per_proc): {self.avg_modules_per_proc:.9f}\n"
                f"  Modules Not in Load (ldrmodules_not_in_load): {self.ldrmodules_not_in_load}\n"
                f"  Modules Not in Init (ldrmodules_not_in_init): {self.ldrmodules_not_in_init}\n"
                f"  Modules Not in Memory (ldrmodules_not_in_mem): {self.ldrmodules_not_in_mem}\n"
                f"  Average Modules Not in Load per Process (ldrmodules_not_in_load_avg): {self.ldrmodules_not_in_load_avg:.9f}\n"
                f"  Average Modules Not in Init per Process (ldrmodules_not_in_init_avg): {self.ldrmodules_not_in_init_avg:.9f}\n"
                f"  Average Modules Not in Memory per Process (ldrmodules_not_in_mem_avg): {self.ldrmodules_not_in_mem_avg:.9f}\n")
