from dataclasses import dataclass

from typing_extensions import override

from malwareAnalysis.malwareAnalysisTool.analysis.models.result.Summary import Summary


@dataclass
class HandlesSummary(Summary):
    """
    A data class to store summarized handles metrics.

    Attributes:
        nhandles (int): Total number of opened handles across all processes.
        avg_handles_per_proc (float): Average number of handles opened per process.
        nport (int): Total count of port handles (used for interprocess or network communication).
        nfile (int): Total count of file handles (indicates file operations).
        nevent (int): Total count of event handles (used for synchronization).
        ndesktop (int): Total count of desktop handles (related to GUI sessions).
        nkey (int): Total count of key handles (associated with registry keys).
        nthread (int): Total count of thread handles (associated with thread objects).
        ndirectory (int): Total count of directory handles (indicates directory operations).
        nsemaphore (int): Total count of semaphore handles (used for resource locking).
        ntimer (int): Total count of timer handles (used for timing or scheduling).
        nsection (int): Total count of section handles (related to shared memory).
        nmutant (int): Total count of mutant handles (used for interprocess synchronization).
    """

    nhandles: int
    avg_handles_per_proc: float
    nport: int
    nfile: int
    nevent: int
    ndesktop: int
    nkey: int
    nthread: int
    ndirectory: int
    nsemaphore: int
    ntimer: int
    nsection: int
    nmutant: int

    @override
    def create_csv_header(self) -> list[str]:
        """
        Generate a CSV header for the summary.
        """
        return [
            "handles_nhandles",
            "handles_avg_handles_per_proc",
            "handles_nport",
            "handles_nfile",
            "handles_nevent",
            "handles_ndesktop",
            "handles_nkey",
            "handles_nthread",
            "handles_ndirectory",
            "handles_nsemaphore",
            "handles_ntimer",
            "handles_nsection",
            "handles_nmutant"
        ]

    @override
    def create_csv_summary(self) -> list[int | float]:
        """
        Generate a CSV summary row with the values.
        """
        return [
            self.nhandles,
            self.avg_handles_per_proc,
            self.nport,
            self.nfile,
            self.nevent,
            self.ndesktop,
            self.nkey,
            self.nthread,
            self.ndirectory,
            self.nsemaphore,
            self.ntimer,
            self.nsection,
            self.nmutant
        ]

    def __str__(self) -> str:
        """
        Generate a formatted string representation of the summary.
        """
        return (f"Handles Summary:\n"
                f"  Total Handles (nhandles): {self.nhandles}\n"
                f"  Average Handles per Process (avg_handles_per_proc): {self.avg_handles_per_proc:.2f}\n"
                f"  Port Handles (nport): {self.nport}\n"
                f"  File Handles (nfile): {self.nfile}\n"
                f"  Event Handles (nevent): {self.nevent}\n"
                f"  Desktop Handles (ndesktop): {self.ndesktop}\n"
                f"  Key Handles (nkey): {self.nkey}\n"
                f"  Thread Handles (nthread): {self.nthread}\n"
                f"  Directory Handles (ndirectory): {self.ndirectory}\n"
                f"  Semaphore Handles (nsemaphore): {self.nsemaphore}\n"
                f"  Timer Handles (ntimer): {self.ntimer}\n"
                f"  Section Handles (nsection): {self.nsection}\n"
                f"  Mutant Handles (nmutant): {self.nmutant}\n")
