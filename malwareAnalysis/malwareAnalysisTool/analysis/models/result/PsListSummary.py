from dataclasses import dataclass
from typing_extensions import override

from malwareAnalysis.malwareAnalysisTool.analysis.models.result.Summary import Summary


@dataclass
class PsListSummary(Summary):
    """
    A data class to store summarized pslist metrics.

    Attributes:
        nproc (int): Total number of processes.
        nppid (int): Average number of threads for the processes Total.
        avg_threads (float): The average number of 64 bit processes.
        nprocs64bit (int): Total number of 64 bit processes.
        avg_handlers (float): Average number of handlers.

    """

    nproc: int
    nppid: int
    avg_threads: float
    nprocs64bit: int
    avg_handlers: float

    @override
    def create_csv_summary(self) -> list[int | float]:
        """
        Generate a CSV-compatible summary as a list of values.
        """
        return [
            self.nproc,
            self.nppid,
            self.avg_threads,
            self.nprocs64bit,
            self.avg_handlers
        ]

    @override
    def create_csv_header(self) -> list[str]:
        """
        Return a CSV-compatible header.
        """
        return [
            "pslist_nproc",
            "pslist_nppid",
            "pslist_avg_threads",
            "pslist_nprocs64bit",
            "pslist_avg_handlers"
        ]

    def __str__(self) -> str:
        """
        Provide a readable string representation of the summary.
        """
        return (f"Process Summary:\n"
                f"  Total Processes (nproc): {self.nproc}\n"
                f"  Unique Parent PIDs (nppid): {self.nppid}\n"
                f"  Average Threads per Process (avg_threads): {self.avg_threads:.9f}\n"
                f"  64-bit Processes (nprocs64bit): {self.nprocs64bit}\n"
                f"  Average Handles per Process (avg_handlers): {self.avg_handlers:.9f}\n")
