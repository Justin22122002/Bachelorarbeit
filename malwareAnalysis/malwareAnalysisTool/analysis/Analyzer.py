from malwareAnalysis.malwareAnalysisTool.analysis import AnalysisStrategy
from malwareAnalysis.malwareAnalysisTool.analysis.models.result.Summary import Summary


class Analyzer:
    def __init__(self, strategies: list[AnalysisStrategy] | None = None) -> None:
        """
        Initialize the Analyzer with a list of strategies.
        """
        self.strategies: list[AnalysisStrategy] = strategies if strategies is not None else []

    def add_strategy(self, strategy: AnalysisStrategy) -> None:
        """
        Adds a new analysis strategy to the analyzer.
        """
        self.strategies.append(strategy)

    def analyze_memory_dump(self) -> None:
        """
        Execute each strategy in the list sequentially.
        """
        for strategy in self.strategies:
            strategy.analyze_memory_dump()

    def analyze_output(self) -> None:
        """
        Execute each strategy in the list sequentially.
        """
        for strategy in self.strategies:
            strategy.analyze_output()

    def get_analyzer_summary(self) -> list[Summary]:
        """
        Retrieve summaries from all analysis strategies.
        """
        summaries: list[Summary] = []

        for strategy in self.strategies:
            new_summary: Summary | None = strategy.analyzer_summary
            if new_summary is not None:
                summaries.append(new_summary)

        return summaries

