import os
from collections import defaultdict

def get_directories_with_suffix_map(base_dir: str, suffixes: list[str]) -> dict[str, list[str]]:
    """
    Returns a dictionary mapping each suffix to a list of directories within the
    given base directory whose names end with that suffix.

    Args:
        base_dir (str): The base directory to search in.
        suffixes (list[str]): A list of suffixes to match directory names against.

    Returns:
        dict[str, list[str]]: A dictionary mapping suffixes to lists of matching directories.
    """
    matching_dirs_map = defaultdict(list)

    # Traverse the directory tree
    for root, dirs, files in os.walk(base_dir):
        for dir_name in dirs:
            # Check which suffix the directory name ends with
            for suffix in suffixes:
                if dir_name.endswith(suffix):
                    matching_dirs_map[suffix].append(os.path.join(root, dir_name))
                    break  # Stop checking further suffixes for this directory

    return dict(matching_dirs_map)

def main() -> None:
    print("This is a tool to scan the specific file structure for the analysis output of the HW sandbox")

    base_dir = "E:/data_sandbox"  # Basisverzeichnis
    suffixes = ["_spyware", "_ransomware", "_trojan", "_benign"]  # Suffixe f√ºr Verzeichnisnamen

    matching_dirs_map = get_directories_with_suffix_map(base_dir, suffixes)
    print("Directories matching the suffixes:")
    for suffix, directories in matching_dirs_map.items():
        print(f"\nSuffix '{suffix}':")
        for dir_path in directories:
            print(dir_path)

if __name__ == '__main__':
    main()
